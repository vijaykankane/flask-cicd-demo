[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flask-cicd-demo"
version = "1.0.0"
description = "Production-ready Flask application demonstrating enterprise CI/CD practices"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Enterprise DevOps Team", email = "devops@company.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@company.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Flask",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Systems Administration",
]
keywords = [
    "flask",
    "ci-cd",
    "jenkins",
    "github-actions",
    "docker",
    "devops",
    "automation",
    "testing",
    "deployment"
]
requires-python = ">=3.8"
dependencies = [
    "Flask>=3.0.0",
    "Werkzeug>=3.0.1",
    "gunicorn>=21.2.0",
    "gevent>=23.9.1",
    "psutil>=5.9.6",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "Flask-WTF>=1.2.1",
    "structlog>=23.2.0",
    "Flask-HealthCheck>=1.0.2",
    "dynaconf>=3.2.4",
    "marshmallow>=3.20.2",
    "Flask-Caching>=2.1.0",
    "Flask-Limiter>=3.5.0",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-mock>=3.12.0",
    "pytest-flask>=1.3.0",
    "flake8>=6.1.0",
    "black>=23.12.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "bandit>=1.7.5",
    "safety>=2.3.4",
    "pre-commit>=3.6.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.3.0",
    "coverage[toml]>=7.3.2",
    "httpx>=0.25.2",
    "responses>=0.24.1",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
]
security = [
    "bandit>=1.7.5",
    "safety>=2.3.4",
]
performance = [
    "locust>=2.17.0",
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0",
]
docs = [
    "Sphinx>=7.2.6",
    "sphinx-rtd-theme>=2.0.0",
]
database = [
    "Flask-SQLAlchemy>=3.1.1",
    "Flask-Migrate>=4.0.5",
    "psycopg2-binary>=2.9.9",
]
monitoring = [
    "prometheus-flask-exporter>=0.23.0",
    "Flask-APM>=0.1.0",
]
auth = [
    "PyJWT>=2.8.0",
    "Flask-JWT-Extended>=4.6.0",
]

[project.urls]
"Homepage" = "https://github.com/your-username/flask-cicd-demo"
"Bug Reports" = "https://github.com/your-username/flask-cicd-demo/issues"
"Source" = "https://github.com/your-username/flask-cicd-demo"
"Documentation" = "https://github.com/your-username/flask-cicd-demo#readme"
"Changelog" = "https://github.com/your-username/flask-cicd-demo/blob/main/CHANGELOG.md"

[project.scripts]
flask-cicd-demo = "app:main"

[tool.setuptools]
packages = ["app"]

[tool.setuptools.package-data]
app = ["templates/*", "static/*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "tests"]
known_third_party = ["flask", "pytest", "requests"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "flask.*",
    "werkzeug.*",
    "pytest.*",
    "gunicorn.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
    "--junitxml=pytest-results.xml",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security-related",
    "performance: marks tests as performance-related",
    "api: marks tests as API tests",
    "smoke: marks tests as smoke tests",
]
log_cli = true
log_cli_level = "INFO"
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
minversion = "6.0"

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/venv/*",
    "*/env/*",
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "conftest.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)
# This is included here for reference, but needs to be in setup.cfg
# [tool.flake8]
# max-line-length = 88
# extend-ignore = ["E203", "W503"]
# per-file-ignores = [
#     "__init__.py:F401",
# ]
# max-complexity = 10