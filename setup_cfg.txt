[metadata]
name = flask-cicd-demo
version = 1.0.0
description = Production-ready Flask application demonstrating enterprise CI/CD practices
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/your-username/flask-cicd-demo
author = Enterprise DevOps Team
author_email = devops@company.com
license = MIT
license_file = LICENSE
classifier =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Framework :: Flask
    Topic :: Software Development :: Libraries :: Application Frameworks
    Topic :: Internet :: WWW/HTTP :: Dynamic Content

[options]
packages = find:
python_requires = >=3.8
include_package_data = True
zip_safe = False
install_requires =
    Flask>=3.0.0
    Werkzeug>=3.0.1
    gunicorn>=21.2.0
    gevent>=23.9.1
    psutil>=5.9.6
    requests>=2.31.0
    python-dotenv>=1.0.0

[options.packages.find]
exclude =
    tests*
    test_*

[options.extras_require]
dev =
    pytest>=7.4.3
    pytest-cov>=4.1.0
    pytest-flask>=1.3.0
    flake8>=6.1.0
    black>=23.12.0
    isort>=5.12.0
    mypy>=1.7.1
    bandit>=1.7.5
    safety>=2.3.4
    pre-commit>=3.6.0

test =
    pytest>=7.4.3
    pytest-cov>=4.1.0
    pytest-flask>=1.3.0
    coverage[toml]>=7.3.2

[options.entry_points]
console_scripts =
    flask-cicd-demo = app:main

# Flake8 configuration
[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
per-file-ignores =
    __init__.py:F401
max-complexity = 10
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    build,
    dist,
    *.egg-info,
    venv,
    env,
    migrations
select = E,W,F,C
statistics = True
count = True

# Pylint configuration
[pylint]
[pylint.messages_control]
disable = C0330, C0326

[pylint.format]
max-line-length = 88

[pylint.master]
extension-pkg-whitelist = pydantic

# MyPy configuration (fallback if pyproject.toml is not supported)
[mypy]
python_version = 3.9
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
show_error_codes = true

[mypy-flask.*]
ignore_missing_imports = true

[mypy-werkzeug.*]
ignore_missing_imports = true

[mypy-pytest.*]
ignore_missing_imports = true

[mypy-gunicorn.*]
ignore_missing_imports = true

# Isort configuration (fallback)
[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = app,tests
known_third_party = flask,pytest,requests
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Bandit configuration
[bandit]
exclude = /tests
tests = B201,B301
skips = B101,B601

# Coverage configuration (fallback)
[coverage:run]
source = .
omit =
    */venv/*
    */env/*
    */tests/*
    */test_*
    setup.py
    conftest.py
branch = true

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
show_missing = true
precision = 2

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Wheel configuration
[bdist_wheel]
universal = 0

# Setuptools configuration
[egg_info]
tag_build = 
tag_date = 0